{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemButton, Button, Divider, IconButton as MuiIconButton, Menu, MenuItem, CircularProgress, Tooltip } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(window.innerWidth >= 900);\n  const drawerWidth = {\n    xs: '100%',\n    sm: 260\n  };\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n\n  // Add resize listener\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDrawerOpen(window.innerWidth >= 900);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n  const handleConversationClick = conversation => {\n    setCurrentConversation(conversation.id);\n  };\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n\n      // Update state\n      setConversations(updatedConversations);\n\n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n  const groupedConversations = groupConversationsByDate();\n  const handleCopyMessage = content => {\n    navigator.clipboard.writeText(content);\n  };\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n\n    // Remove the AI response that followed the edited message\n    if (editingMessage + 1 < updatedMessages.length) {\n      updatedMessages.splice(editingMessage + 1, 1);\n    }\n    setMessages(updatedMessages);\n\n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv => conv.id === currentConversation ? {\n        ...conv,\n        messages: updatedMessages\n      } : conv);\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n    setEditingMessage(null);\n    setEditedContent('');\n\n    // Trigger a new submission with the edited content\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: editedContent\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Update the conversation with the new response\n      if (currentConversation) {\n        const updatedConversations = conversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv);\n        setConversations(updatedConversations);\n        localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: window.innerWidth >= 900 ? \"permanent\" : \"temporary\",\n      open: isDrawerOpen,\n      onClose: () => setIsDrawerOpen(false),\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#202123',\n          borderRight: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewChat,\n          fullWidth: true,\n          sx: {\n            color: 'white',\n            borderColor: 'rgba(255, 255, 255, 0.2)',\n            '&:hover': {\n              borderColor: 'rgba(255, 255, 255, 0.3)',\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderColor: 'rgba(255, 255, 255, 0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          overflow: 'auto',\n          height: 'calc(100vh - 80px)'\n        },\n        children: Object.entries(groupedConversations).map(([group, convs]) => convs.length > 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: group.charAt(0).toUpperCase() + group.slice(1),\n              sx: {\n                color: 'rgba(255, 255, 255, 0.5)',\n                fontSize: '0.875rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 17\n          }, this), convs.map(conversation => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            sx: {\n              backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              onClick: () => handleConversationClick(conversation),\n              sx: {\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: conversation.title,\n                sx: {\n                  color: 'white',\n                  '& .MuiTypography-root': {\n                    fontSize: '0.875rem'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MuiIconButton, {\n                size: \"small\",\n                onClick: e => handleMenuClick(e, conversation),\n                \"aria-label\": `Options for ${conversation.title}`,\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": Boolean(anchorEl) && (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  '&:focus': {\n                    outline: '2px solid rgba(255, 255, 255, 0.3)',\n                    outlineOffset: '2px'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)\n          }, conversation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 19\n          }, this))]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"transparent\",\n        elevation: 0,\n        sx: {\n          backgroundColor: 'background.paper',\n          borderBottom: '1px solid rgba(255, 255, 255, 0.1)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [window.innerWidth < 900 && /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"start\",\n            color: \"inherit\",\n            \"aria-label\": \"menu\",\n            onClick: () => setIsDrawerOpen(true),\n            sx: {\n              mr: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1,\n              fontSize: {\n                xs: '1rem',\n                sm: '1.25rem'\n              }\n            },\n            children: currentConversation ? (_conversations$find = conversations.find(c => c.id === currentConversation)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title : 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          py: {\n            xs: 1,\n            sm: 2\n          },\n          height: 'calc(100vh - 64px)',\n          px: {\n            xs: 1,\n            sm: 2\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            overflow: 'auto',\n            mb: 2,\n            px: {\n              xs: 0,\n              sm: 2\n            }\n          },\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: {\n                  xs: '100%',\n                  sm: '800px'\n                },\n                width: '100%',\n                backgroundColor: message.role === 'user' ? index % 2 === 0 ? 'rgba(16, 163, 127, 0.1)' : 'rgba(16, 163, 127, 0.05)' : 'background.paper',\n                p: {\n                  xs: 1.5,\n                  sm: 2\n                },\n                borderRadius: 2,\n                position: 'relative',\n                '&:hover .message-actions': {\n                  opacity: 1\n                }\n              },\n              children: editingMessage === index ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  fullWidth: true,\n                  value: editedContent,\n                  onChange: e => setEditedContent(e.target.value),\n                  sx: {\n                    '& .MuiOutlinedInput-root': {\n                      backgroundColor: 'background.default'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    justifyContent: 'flex-end'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: handleCancelEdit,\n                    sx: {\n                      color: 'text.secondary'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    onClick: handleSaveEdit,\n                    sx: {\n                      bgcolor: 'primary.main'\n                    },\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    whiteSpace: 'pre-wrap',\n                    color: 'text.primary',\n                    fontSize: '1rem',\n                    lineHeight: 1.6\n                  },\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"message-actions\",\n                  sx: {\n                    position: 'absolute',\n                    top: 8,\n                    right: 8,\n                    display: 'flex',\n                    gap: 1,\n                    opacity: 0,\n                    transition: 'opacity 0.2s',\n                    backgroundColor: 'background.paper',\n                    borderRadius: 1,\n                    p: 0.5\n                  },\n                  children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Copy\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleCopyMessage(message.content),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 548,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleEditMessage(message, index),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 557,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: {\n                  xs: '100%',\n                  sm: '800px'\n                },\n                width: '100%',\n                backgroundColor: 'background.paper',\n                p: {\n                  xs: 1.5,\n                  sm: 2\n                },\n                borderRadius: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20,\n                thickness: 4,\n                sx: {\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 593,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'text.primary',\n                  fontSize: {\n                    xs: '0.875rem',\n                    sm: '1rem'\n                  },\n                  lineHeight: 1.6\n                },\n                children: \"Generating response...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            maxWidth: {\n              xs: '100%',\n              sm: '800px'\n            },\n            width: '100%',\n            mx: 'auto',\n            px: {\n              xs: 0,\n              sm: 2\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: {\n                xs: 1,\n                sm: 2\n              },\n              display: 'flex',\n              alignItems: 'flex-end',\n              gap: 1,\n              backgroundColor: 'background.paper',\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              maxRows: 4,\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Send a message...\",\n              variant: \"outlined\",\n              disabled: isLoading,\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'background.default',\n                  '& fieldset': {\n                    borderColor: 'transparent'\n                  },\n                  '&:hover fieldset': {\n                    borderColor: 'primary.main'\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: 'primary.main'\n                  }\n                },\n                '& .MuiInputBase-input': {\n                  fontSize: {\n                    xs: '0.875rem',\n                    sm: '1rem'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSend,\n              disabled: isLoading || !input.trim(),\n              sx: {\n                alignSelf: 'flex-end',\n                '&:hover': {\n                  backgroundColor: 'rgba(16, 163, 127, 0.1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      onClick: handleMenuClose,\n      sx: {\n        '& .MuiPaper-root': {\n          backgroundColor: '#202123',\n          color: 'white'\n        }\n      },\n      MenuListProps: {\n        'aria-labelledby': 'conversation-menu-button'\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteClick,\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), \" Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EYcofCQ483ibAP760skvzTghT8w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","TextField","IconButton","Typography","AppBar","Toolbar","Drawer","List","ListItem","ListItemText","ListItemButton","Button","Divider","MuiIconButton","Menu","MenuItem","CircularProgress","Tooltip","SendIcon","AddIcon","MoreVertIcon","DeleteIcon","ContentCopyIcon","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_conversations$find","messages","setMessages","input","setInput","isLoading","setIsLoading","conversations","setConversations","savedConversations","localStorage","getItem","JSON","parse","currentConversation","setCurrentConversation","savedCurrentConversation","anchorEl","setAnchorEl","selectedConversation","setSelectedConversation","messagesEndRef","isDrawerOpen","setIsDrawerOpen","window","innerWidth","drawerWidth","xs","sm","editingMessage","setEditingMessage","editedContent","setEditedContent","setItem","stringify","conversation","find","conv","id","handleResize","addEventListener","removeEventListener","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","role","content","updatedMessages","response","fetch","method","headers","body","message","ok","Error","data","json","assistantMessage","finalMessages","newConversation","Date","now","title","timestamp","prevConversations","map","error","console","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleNewChat","handleConversationClick","handleMenuClick","event","stopPropagation","currentTarget","handleMenuClose","handleDeleteClick","updatedConversations","filter","removeItem","groupConversationsByDate","today","setHours","yesterday","setDate","getDate","lastWeek","date","older","groupedConversations","handleCopyMessage","navigator","clipboard","writeText","handleEditMessage","index","handleSaveEdit","length","splice","handleCancelEdit","sx","display","height","children","variant","open","onClose","width","flexShrink","boxSizing","backgroundColor","borderRight","p","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fullWidth","color","borderColor","overflow","Object","entries","group","convs","primary","charAt","toUpperCase","slice","fontSize","disablePadding","size","Boolean","outline","outlineOffset","flexGrow","flexDirection","position","elevation","borderBottom","edge","mr","component","c","maxWidth","py","px","mb","justifyContent","borderRadius","opacity","gap","multiline","value","onChange","target","bgcolor","whiteSpace","lineHeight","className","top","right","transition","alignItems","thickness","ref","mx","maxRows","onKeyPress","placeholder","disabled","alignSelf","MenuListProps","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Paper, \n  TextField, \n  IconButton, \n  Typography, \n  AppBar, \n  Toolbar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Button,\n  Divider,\n  IconButton as MuiIconButton,\n  Menu,\n  MenuItem,\n  CircularProgress,\n  Tooltip\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(window.innerWidth >= 900);\n  const drawerWidth = { xs: '100%', sm: 260 };\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n\n  // Add resize listener\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDrawerOpen(window.innerWidth >= 900);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            conv.id === currentConversation \n              ? { ...conv, messages: finalMessages }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n\n  const handleConversationClick = (conversation) => {\n    setCurrentConversation(conversation.id);\n  };\n\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n      \n      // Update state\n      setConversations(updatedConversations);\n      \n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      \n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n\n  const groupedConversations = groupConversationsByDate();\n\n  const handleCopyMessage = (content) => {\n    navigator.clipboard.writeText(content);\n  };\n\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n\n    // Remove the AI response that followed the edited message\n    if (editingMessage + 1 < updatedMessages.length) {\n      updatedMessages.splice(editingMessage + 1, 1);\n    }\n\n    setMessages(updatedMessages);\n    \n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv =>\n        conv.id === currentConversation\n          ? { ...conv, messages: updatedMessages }\n          : conv\n      );\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n\n    setEditingMessage(null);\n    setEditedContent('');\n\n    // Trigger a new submission with the edited content\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: editedContent }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Update the conversation with the new response\n      if (currentConversation) {\n        const updatedConversations = conversations.map(conv =>\n          conv.id === currentConversation\n            ? { ...conv, messages: finalMessages }\n            : conv\n        );\n        setConversations(updatedConversations);\n        localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <Drawer\n        variant={window.innerWidth >= 900 ? \"permanent\" : \"temporary\"}\n        open={isDrawerOpen}\n        onClose={() => setIsDrawerOpen(false)}\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n            backgroundColor: '#202123',\n            borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n          },\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={handleNewChat}\n            fullWidth\n            sx={{\n              color: 'white',\n              borderColor: 'rgba(255, 255, 255, 0.2)',\n              '&:hover': {\n                borderColor: 'rgba(255, 255, 255, 0.3)',\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          >\n            New Chat\n          </Button>\n        </Box>\n        <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n        <List sx={{ overflow: 'auto', height: 'calc(100vh - 80px)' }}>\n          {Object.entries(groupedConversations).map(([group, convs]) => (\n            convs.length > 0 && (\n              <React.Fragment key={group}>\n                <ListItem>\n                  <ListItemText\n                    primary={group.charAt(0).toUpperCase() + group.slice(1)}\n                    sx={{\n                      color: 'rgba(255, 255, 255, 0.5)',\n                      fontSize: '0.875rem',\n                    }}\n                  />\n                </ListItem>\n                {convs.map((conversation) => (\n                  <ListItem\n                    key={conversation.id}\n                    disablePadding\n                    sx={{\n                      backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent',\n                    }}\n                  >\n                    <ListItemButton\n                      onClick={() => handleConversationClick(conversation)}\n                      sx={{\n                        '&:hover': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                        },\n                      }}\n                    >\n                      <ListItemText\n                        primary={conversation.title}\n                        sx={{\n                          color: 'white',\n                          '& .MuiTypography-root': {\n                            fontSize: '0.875rem',\n                          },\n                        }}\n                      />\n                      <MuiIconButton\n                        size=\"small\"\n                        onClick={(e) => handleMenuClick(e, conversation)}\n                        aria-label={`Options for ${conversation.title}`}\n                        aria-haspopup=\"true\"\n                        aria-expanded={Boolean(anchorEl) && selectedConversation?.id === conversation.id}\n                        sx={{ \n                          color: 'rgba(255, 255, 255, 0.5)',\n                          '&:focus': {\n                            outline: '2px solid rgba(255, 255, 255, 0.3)',\n                            outlineOffset: '2px',\n                          },\n                        }}\n                      >\n                        <MoreVertIcon />\n                      </MuiIconButton>\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          ))}\n        </List>\n      </Drawer>\n\n      <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <AppBar \n          position=\"static\" \n          color=\"transparent\" \n          elevation={0}\n          sx={{\n            backgroundColor: 'background.paper',\n            borderBottom: '1px solid rgba(255, 255, 255, 0.1)',\n          }}\n        >\n          <Toolbar>\n            {window.innerWidth < 900 && (\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => setIsDrawerOpen(true)}\n                sx={{ mr: 2 }}\n              >\n                <MoreVertIcon />\n              </IconButton>\n            )}\n            <Typography \n              variant=\"h6\" \n              component=\"div\" \n              sx={{ \n                flexGrow: 1,\n                fontSize: { xs: '1rem', sm: '1.25rem' }\n              }}\n            >\n              {currentConversation ? conversations.find(c => c.id === currentConversation)?.title : 'New Chat'}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        \n        <Container \n          maxWidth=\"md\" \n          sx={{ \n            flexGrow: 1, \n            display: 'flex', \n            flexDirection: 'column',\n            py: { xs: 1, sm: 2 },\n            height: 'calc(100vh - 64px)',\n            px: { xs: 1, sm: 2 }\n          }}\n        >\n          <Box \n            sx={{ \n              flexGrow: 1, \n              overflow: 'auto', \n              mb: 2,\n              px: { xs: 0, sm: 2 }\n            }}\n          >\n            {messages.map((message, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: { xs: '100%', sm: '800px' },\n                    width: '100%',\n                    backgroundColor: message.role === 'user' \n                      ? index % 2 === 0 \n                        ? 'rgba(16, 163, 127, 0.1)'\n                        : 'rgba(16, 163, 127, 0.05)'\n                      : 'background.paper',\n                    p: { xs: 1.5, sm: 2 },\n                    borderRadius: 2,\n                    position: 'relative',\n                    '&:hover .message-actions': {\n                      opacity: 1,\n                    },\n                  }}\n                >\n                  {editingMessage === index ? (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      <TextField\n                        multiline\n                        fullWidth\n                        value={editedContent}\n                        onChange={(e) => setEditedContent(e.target.value)}\n                        sx={{\n                          '& .MuiOutlinedInput-root': {\n                            backgroundColor: 'background.default',\n                          },\n                        }}\n                      />\n                      <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n                        <Button\n                          size=\"small\"\n                          onClick={handleCancelEdit}\n                          sx={{ color: 'text.secondary' }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          onClick={handleSaveEdit}\n                          sx={{ bgcolor: 'primary.main' }}\n                        >\n                          Save\n                        </Button>\n                      </Box>\n                    </Box>\n                  ) : (\n                    <>\n                      <Typography \n                        variant=\"body1\" \n                        sx={{ \n                          whiteSpace: 'pre-wrap',\n                          color: 'text.primary',\n                          fontSize: '1rem',\n                          lineHeight: 1.6\n                        }}\n                      >\n                        {message.content}\n                      </Typography>\n                      <Box\n                        className=\"message-actions\"\n                        sx={{\n                          position: 'absolute',\n                          top: 8,\n                          right: 8,\n                          display: 'flex',\n                          gap: 1,\n                          opacity: 0,\n                          transition: 'opacity 0.2s',\n                          backgroundColor: 'background.paper',\n                          borderRadius: 1,\n                          p: 0.5,\n                        }}\n                      >\n                        {message.role === 'assistant' ? (\n                          <Tooltip title=\"Copy\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleCopyMessage(message.content)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <ContentCopyIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        ) : (\n                          <Tooltip title=\"Edit\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleEditMessage(message, index)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </Box>\n            ))}\n            {isLoading && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: { xs: '100%', sm: '800px' },\n                    width: '100%',\n                    backgroundColor: 'background.paper',\n                    p: { xs: 1.5, sm: 2 },\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2\n                  }}\n                >\n                  <CircularProgress size={20} thickness={4} sx={{ color: 'primary.main' }} />\n                  <Typography \n                    variant=\"body1\" \n                    sx={{ \n                      color: 'text.primary',\n                      fontSize: { xs: '0.875rem', sm: '1rem' },\n                      lineHeight: 1.6\n                    }}\n                  >\n                    Generating response...\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n            <div ref={messagesEndRef} />\n          </Box>\n          \n          <Box\n            sx={{\n              position: 'relative',\n              maxWidth: { xs: '100%', sm: '800px' },\n              width: '100%',\n              mx: 'auto',\n              px: { xs: 0, sm: 2 }\n            }}\n          >\n            <Paper\n              elevation={3}\n              sx={{\n                p: { xs: 1, sm: 2 },\n                display: 'flex',\n                alignItems: 'flex-end',\n                gap: 1,\n                backgroundColor: 'background.paper',\n                borderRadius: 2,\n              }}\n            >\n              <TextField\n                fullWidth\n                multiline\n                maxRows={4}\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Send a message...\"\n                variant=\"outlined\"\n                disabled={isLoading}\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    backgroundColor: 'background.default',\n                    '& fieldset': {\n                      borderColor: 'transparent',\n                    },\n                    '&:hover fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                  },\n                  '& .MuiInputBase-input': {\n                    fontSize: { xs: '0.875rem', sm: '1rem' },\n                  },\n                }}\n              />\n              <IconButton\n                color=\"primary\"\n                onClick={handleSend}\n                disabled={isLoading || !input.trim()}\n                sx={{ \n                  alignSelf: 'flex-end',\n                  '&:hover': {\n                    backgroundColor: 'rgba(16, 163, 127, 0.1)',\n                  },\n                }}\n              >\n                <SendIcon />\n              </IconButton>\n            </Paper>\n          </Box>\n        </Container>\n      </Box>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        onClick={handleMenuClose}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: '#202123',\n            color: 'white',\n          },\n        }}\n        MenuListProps={{\n          'aria-labelledby': 'conversation-menu-button',\n        }}\n      >\n        <MenuItem onClick={handleDeleteClick}>\n          <DeleteIcon sx={{ mr: 1 }} /> Delete\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}