{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemButton, Button, Divider, IconButton as MuiIconButton, Menu, MenuItem, CircularProgress, Tooltip } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const drawerWidth = {\n    xs: '100%',\n    sm: 260\n  };\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n  const handleConversationClick = conversation => {\n    setCurrentConversation(conversation.id);\n  };\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n\n      // Update state\n      setConversations(updatedConversations);\n\n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n  const groupedConversations = groupConversationsByDate();\n  const handleCopyMessage = content => {\n    navigator.clipboard.writeText(content);\n  };\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n\n    // Remove the AI response that followed the edited message\n    if (editingMessage + 1 < updatedMessages.length) {\n      updatedMessages.splice(editingMessage + 1, 1);\n    }\n    setMessages(updatedMessages);\n\n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv => conv.id === currentConversation ? {\n        ...conv,\n        messages: updatedMessages\n      } : conv);\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n    setEditingMessage(null);\n    setEditedContent('');\n\n    // Trigger a new submission with the edited content\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: editedContent\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Update the conversation with the new response\n      if (currentConversation) {\n        const updatedConversations = conversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv);\n        setConversations(updatedConversations);\n        localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      sx: {\n        width: {\n          sm: `calc(100% - ${drawerWidth.sm}px)`\n        },\n        ml: {\n          sm: `${drawerWidth.sm}px`\n        },\n        display: {\n          sm: 'none'\n        },\n        bgcolor: '#202123'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          sx: {\n            mr: 2,\n            display: {\n              sm: 'none'\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          component: \"div\",\n          children: currentConversation ? (_conversations$find = conversations.find(c => c.id === currentConversation)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title : 'New Chat'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"nav\",\n      sx: {\n        width: {\n          sm: drawerWidth.sm\n        },\n        flexShrink: {\n          sm: 0\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        open: mobileOpen,\n        onClose: handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n        },\n        sx: {\n          display: {\n            xs: 'block',\n            sm: 'none'\n          },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: drawerWidth,\n            backgroundColor: '#202123',\n            borderRight: '1px solid rgba(255, 255, 255, 0.1)'\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(DrawerContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"permanent\",\n        sx: {\n          display: {\n            xs: 'none',\n            sm: 'block'\n          },\n          '& .MuiDrawer-paper': {\n            boxSizing: 'border-box',\n            width: drawerWidth.sm,\n            backgroundColor: '#202123',\n            borderRight: '1px solid rgba(255, 255, 255, 0.1)'\n          }\n        },\n        open: true,\n        children: /*#__PURE__*/_jsxDEV(DrawerContent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        width: {\n          sm: `calc(100% - ${drawerWidth.sm}px)`\n        },\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          display: {\n            xs: 'none',\n            sm: 'block'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          py: 2,\n          height: {\n            xs: 'calc(100vh - 56px)',\n            sm: 'calc(100vh - 64px)'\n          },\n          px: {\n            xs: 1,\n            sm: 2\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            overflow: 'auto',\n            mb: 2,\n            px: {\n              xs: 0,\n              sm: 2\n            }\n          },\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: {\n                  xs: '100%',\n                  sm: '800px'\n                },\n                width: '100%',\n                backgroundColor: message.role === 'user' ? index % 2 === 0 ? 'rgba(16, 163, 127, 0.1)' : 'rgba(16, 163, 127, 0.05)' : 'background.paper',\n                p: {\n                  xs: 1.5,\n                  sm: 2\n                },\n                borderRadius: 2,\n                position: 'relative',\n                '&:hover .message-actions': {\n                  opacity: 1\n                }\n              },\n              children: editingMessage === index ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  fullWidth: true,\n                  value: editedContent,\n                  onChange: e => setEditedContent(e.target.value),\n                  sx: {\n                    '& .MuiOutlinedInput-root': {\n                      backgroundColor: 'background.default'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    justifyContent: 'flex-end'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: handleCancelEdit,\n                    sx: {\n                      color: 'text.secondary'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    onClick: handleSaveEdit,\n                    sx: {\n                      bgcolor: 'primary.main'\n                    },\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    whiteSpace: 'pre-wrap',\n                    color: 'text.primary',\n                    fontSize: '1rem',\n                    lineHeight: 1.6\n                  },\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"message-actions\",\n                  sx: {\n                    position: 'absolute',\n                    top: 8,\n                    right: 8,\n                    display: 'flex',\n                    gap: 1,\n                    opacity: 0,\n                    transition: 'opacity 0.2s',\n                    backgroundColor: 'background.paper',\n                    borderRadius: 1,\n                    p: 0.5\n                  },\n                  children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Copy\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleCopyMessage(message.content),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 487,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleEditMessage(message, index),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 502,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: {\n                  xs: '100%',\n                  sm: '800px'\n                },\n                width: '100%',\n                backgroundColor: 'background.paper',\n                p: {\n                  xs: 1.5,\n                  sm: 2\n                },\n                borderRadius: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20,\n                thickness: 4,\n                sx: {\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'text.primary',\n                  fontSize: {\n                    xs: '0.875rem',\n                    sm: '1rem'\n                  },\n                  lineHeight: 1.6\n                },\n                children: \"Generating response...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            maxWidth: {\n              xs: '100%',\n              sm: '800px'\n            },\n            width: '100%',\n            mx: 'auto',\n            px: {\n              xs: 0,\n              sm: 2\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: {\n                xs: 1,\n                sm: 2\n              },\n              display: 'flex',\n              alignItems: 'flex-end',\n              gap: 1,\n              backgroundColor: 'background.paper',\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              maxRows: 4,\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Send a message...\",\n              variant: \"outlined\",\n              disabled: isLoading,\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'background.default',\n                  '& fieldset': {\n                    borderColor: 'transparent'\n                  },\n                  '&:hover fieldset': {\n                    borderColor: 'primary.main'\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: 'primary.main'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSend,\n              disabled: isLoading || !input.trim(),\n              sx: {\n                alignSelf: 'flex-end',\n                '&:hover': {\n                  backgroundColor: 'rgba(16, 163, 127, 0.1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      onClick: handleMenuClose,\n      sx: {\n        '& .MuiPaper-root': {\n          backgroundColor: '#202123',\n          color: 'white'\n        }\n      },\n      MenuListProps: {\n        'aria-labelledby': 'conversation-menu-button'\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteClick,\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), \" Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n}\n\n// Separate component for drawer content to avoid code duplication\n_s(App, \"z5G3TNfxI0kdTViirZSEx0+FjDs=\");\n_c = App;\nconst DrawerContent = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 20\n      }, this),\n      onClick: handleNewChat,\n      fullWidth: true,\n      sx: {\n        color: 'white',\n        borderColor: 'rgba(255, 255, 255, 0.2)',\n        '&:hover': {\n          borderColor: 'rgba(255, 255, 255, 0.3)',\n          backgroundColor: 'rgba(255, 255, 255, 0.1)'\n        }\n      },\n      children: \"New Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 638,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Divider, {\n    sx: {\n      borderColor: 'rgba(255, 255, 255, 0.1)'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 656,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      overflow: 'auto',\n      height: 'calc(100vh - 80px)'\n    },\n    children: Object.entries(groupedConversations).map(([group, convs]) => convs.length > 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: group.charAt(0).toUpperCase() + group.slice(1),\n          sx: {\n            color: 'rgba(255, 255, 255, 0.5)',\n            fontSize: '0.875rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 13\n      }, this), convs.map(conversation => {\n        var _selectedConversation;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          disablePadding: true,\n          sx: {\n            backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => {\n              handleConversationClick(conversation);\n              if (window.innerWidth < 600) {\n                handleDrawerToggle();\n              }\n            },\n            sx: {\n              '&:hover': {\n                backgroundColor: 'rgba(255, 255, 255, 0.1)'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: conversation.title,\n              sx: {\n                color: 'white',\n                '& .MuiTypography-root': {\n                  fontSize: '0.875rem'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MuiIconButton, {\n              size: \"small\",\n              onClick: e => handleMenuClick(e, conversation),\n              \"aria-label\": `Options for ${conversation.title}`,\n              \"aria-haspopup\": \"true\",\n              \"aria-expanded\": Boolean(anchorEl) && ((_selectedConversation = selectedConversation) === null || _selectedConversation === void 0 ? void 0 : _selectedConversation.id) === conversation.id,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.5)',\n                '&:focus': {\n                  outline: '2px solid rgba(255, 255, 255, 0.3)',\n                  outlineOffset: '2px'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 714,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 17\n          }, this)\n        }, conversation.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 15\n        }, this);\n      })]\n    }, group, true, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 657,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c2 = DrawerContent;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"DrawerContent\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","TextField","IconButton","Typography","AppBar","Toolbar","Drawer","List","ListItem","ListItemText","ListItemButton","Button","Divider","MuiIconButton","Menu","MenuItem","CircularProgress","Tooltip","SendIcon","AddIcon","MoreVertIcon","DeleteIcon","ContentCopyIcon","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_conversations$find","messages","setMessages","input","setInput","isLoading","setIsLoading","conversations","setConversations","savedConversations","localStorage","getItem","JSON","parse","currentConversation","setCurrentConversation","savedCurrentConversation","anchorEl","setAnchorEl","selectedConversation","setSelectedConversation","messagesEndRef","mobileOpen","setMobileOpen","drawerWidth","xs","sm","editingMessage","setEditingMessage","editedContent","setEditedContent","setItem","stringify","conversation","find","conv","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","role","content","updatedMessages","response","fetch","method","headers","body","message","ok","Error","data","json","assistantMessage","finalMessages","newConversation","Date","now","title","timestamp","prevConversations","map","error","console","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleNewChat","handleConversationClick","handleMenuClick","event","stopPropagation","currentTarget","handleMenuClose","handleDeleteClick","updatedConversations","filter","removeItem","groupConversationsByDate","today","setHours","yesterday","setDate","getDate","lastWeek","date","older","groupedConversations","handleCopyMessage","navigator","clipboard","writeText","handleEditMessage","index","handleSaveEdit","length","splice","handleCancelEdit","handleDrawerToggle","sx","display","height","children","position","width","ml","bgcolor","color","edge","onClick","mr","fileName","_jsxFileName","lineNumber","columnNumber","variant","noWrap","component","c","flexShrink","open","onClose","ModalProps","keepMounted","boxSizing","backgroundColor","borderRight","DrawerContent","flexGrow","p","flexDirection","maxWidth","py","px","overflow","mb","justifyContent","borderRadius","opacity","gap","multiline","fullWidth","value","onChange","target","size","whiteSpace","fontSize","lineHeight","className","top","right","transition","alignItems","thickness","ref","mx","elevation","maxRows","onKeyPress","placeholder","disabled","borderColor","alignSelf","Boolean","MenuListProps","_c","startIcon","Object","entries","group","convs","primary","charAt","toUpperCase","slice","_selectedConversation","disablePadding","window","innerWidth","outline","outlineOffset","_c2","$RefreshReg$"],"sources":["/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Paper, \n  TextField, \n  IconButton, \n  Typography, \n  AppBar, \n  Toolbar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Button,\n  Divider,\n  IconButton as MuiIconButton,\n  Menu,\n  MenuItem,\n  CircularProgress,\n  Tooltip\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const drawerWidth = { xs: '100%', sm: 260 };\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            conv.id === currentConversation \n              ? { ...conv, messages: finalMessages }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n\n  const handleConversationClick = (conversation) => {\n    setCurrentConversation(conversation.id);\n  };\n\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n      \n      // Update state\n      setConversations(updatedConversations);\n      \n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      \n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n\n  const groupedConversations = groupConversationsByDate();\n\n  const handleCopyMessage = (content) => {\n    navigator.clipboard.writeText(content);\n  };\n\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n\n    // Remove the AI response that followed the edited message\n    if (editingMessage + 1 < updatedMessages.length) {\n      updatedMessages.splice(editingMessage + 1, 1);\n    }\n\n    setMessages(updatedMessages);\n    \n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv =>\n        conv.id === currentConversation\n          ? { ...conv, messages: updatedMessages }\n          : conv\n      );\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n\n    setEditingMessage(null);\n    setEditedContent('');\n\n    // Trigger a new submission with the edited content\n    try {\n      setIsLoading(true);\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: editedContent }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Update the conversation with the new response\n      if (currentConversation) {\n        const updatedConversations = conversations.map(conv =>\n          conv.id === currentConversation\n            ? { ...conv, messages: finalMessages }\n            : conv\n        );\n        setConversations(updatedConversations);\n        localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <AppBar\n        position=\"fixed\"\n        sx={{\n          width: { sm: `calc(100% - ${drawerWidth.sm}px)` },\n          ml: { sm: `${drawerWidth.sm}px` },\n          display: { sm: 'none' },\n          bgcolor: '#202123',\n        }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' } }}\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap component=\"div\">\n            {currentConversation ? conversations.find(c => c.id === currentConversation)?.title : 'New Chat'}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Box\n        component=\"nav\"\n        sx={{ width: { sm: drawerWidth.sm }, flexShrink: { sm: 0 } }}\n      >\n        <Drawer\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', sm: 'none' },\n            '& .MuiDrawer-paper': { \n              boxSizing: 'border-box', \n              width: drawerWidth,\n              backgroundColor: '#202123',\n              borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n            },\n          }}\n        >\n          <DrawerContent />\n        </Drawer>\n        <Drawer\n          variant=\"permanent\"\n          sx={{\n            display: { xs: 'none', sm: 'block' },\n            '& .MuiDrawer-paper': { \n              boxSizing: 'border-box', \n              width: drawerWidth.sm,\n              backgroundColor: '#202123',\n              borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n            },\n          }}\n          open\n        >\n          <DrawerContent />\n        </Drawer>\n      </Box>\n\n      <Box \n        component=\"main\" \n        sx={{ \n          flexGrow: 1, \n          p: 3, \n          width: { sm: `calc(100% - ${drawerWidth.sm}px)` },\n          height: '100vh',\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <Toolbar sx={{ display: { xs: 'none', sm: 'block' } }} />\n        <Container \n          maxWidth=\"md\" \n          sx={{ \n            flexGrow: 1, \n            display: 'flex', \n            flexDirection: 'column',\n            py: 2,\n            height: { xs: 'calc(100vh - 56px)', sm: 'calc(100vh - 64px)' },\n            px: { xs: 1, sm: 2 }\n          }}\n        >\n          <Box \n            sx={{ \n              flexGrow: 1, \n              overflow: 'auto', \n              mb: 2,\n              px: { xs: 0, sm: 2 }\n            }}\n          >\n            {messages.map((message, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: { xs: '100%', sm: '800px' },\n                    width: '100%',\n                    backgroundColor: message.role === 'user' \n                      ? index % 2 === 0 \n                        ? 'rgba(16, 163, 127, 0.1)'\n                        : 'rgba(16, 163, 127, 0.05)'\n                      : 'background.paper',\n                    p: { xs: 1.5, sm: 2 },\n                    borderRadius: 2,\n                    position: 'relative',\n                    '&:hover .message-actions': {\n                      opacity: 1,\n                    },\n                  }}\n                >\n                  {editingMessage === index ? (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      <TextField\n                        multiline\n                        fullWidth\n                        value={editedContent}\n                        onChange={(e) => setEditedContent(e.target.value)}\n                        sx={{\n                          '& .MuiOutlinedInput-root': {\n                            backgroundColor: 'background.default',\n                          },\n                        }}\n                      />\n                      <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n                        <Button\n                          size=\"small\"\n                          onClick={handleCancelEdit}\n                          sx={{ color: 'text.secondary' }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          onClick={handleSaveEdit}\n                          sx={{ bgcolor: 'primary.main' }}\n                        >\n                          Save\n                        </Button>\n                      </Box>\n                    </Box>\n                  ) : (\n                    <>\n                      <Typography \n                        variant=\"body1\" \n                        sx={{ \n                          whiteSpace: 'pre-wrap',\n                          color: 'text.primary',\n                          fontSize: '1rem',\n                          lineHeight: 1.6\n                        }}\n                      >\n                        {message.content}\n                      </Typography>\n                      <Box\n                        className=\"message-actions\"\n                        sx={{\n                          position: 'absolute',\n                          top: 8,\n                          right: 8,\n                          display: 'flex',\n                          gap: 1,\n                          opacity: 0,\n                          transition: 'opacity 0.2s',\n                          backgroundColor: 'background.paper',\n                          borderRadius: 1,\n                          p: 0.5,\n                        }}\n                      >\n                        {message.role === 'assistant' ? (\n                          <Tooltip title=\"Copy\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleCopyMessage(message.content)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <ContentCopyIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        ) : (\n                          <Tooltip title=\"Edit\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleEditMessage(message, index)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </Box>\n            ))}\n            {isLoading && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: { xs: '100%', sm: '800px' },\n                    width: '100%',\n                    backgroundColor: 'background.paper',\n                    p: { xs: 1.5, sm: 2 },\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2\n                  }}\n                >\n                  <CircularProgress size={20} thickness={4} sx={{ color: 'primary.main' }} />\n                  <Typography \n                    variant=\"body1\" \n                    sx={{ \n                      color: 'text.primary',\n                      fontSize: { xs: '0.875rem', sm: '1rem' },\n                      lineHeight: 1.6\n                    }}\n                  >\n                    Generating response...\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n            <div ref={messagesEndRef} />\n          </Box>\n          \n          <Box\n            sx={{\n              position: 'relative',\n              maxWidth: { xs: '100%', sm: '800px' },\n              width: '100%',\n              mx: 'auto',\n              px: { xs: 0, sm: 2 }\n            }}\n          >\n            <Paper\n              elevation={3}\n              sx={{\n                p: { xs: 1, sm: 2 },\n                display: 'flex',\n                alignItems: 'flex-end',\n                gap: 1,\n                backgroundColor: 'background.paper',\n                borderRadius: 2,\n              }}\n            >\n              <TextField\n                fullWidth\n                multiline\n                maxRows={4}\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Send a message...\"\n                variant=\"outlined\"\n                disabled={isLoading}\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    backgroundColor: 'background.default',\n                    '& fieldset': {\n                      borderColor: 'transparent',\n                    },\n                    '&:hover fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                  },\n                }}\n              />\n              <IconButton\n                color=\"primary\"\n                onClick={handleSend}\n                disabled={isLoading || !input.trim()}\n                sx={{ \n                  alignSelf: 'flex-end',\n                  '&:hover': {\n                    backgroundColor: 'rgba(16, 163, 127, 0.1)',\n                  },\n                }}\n              >\n                <SendIcon />\n              </IconButton>\n            </Paper>\n          </Box>\n        </Container>\n      </Box>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        onClick={handleMenuClose}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: '#202123',\n            color: 'white',\n          },\n        }}\n        MenuListProps={{\n          'aria-labelledby': 'conversation-menu-button',\n        }}\n      >\n        <MenuItem onClick={handleDeleteClick}>\n          <DeleteIcon sx={{ mr: 1 }} /> Delete\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\n// Separate component for drawer content to avoid code duplication\nconst DrawerContent = () => (\n  <>\n    <Box sx={{ p: 2 }}>\n      <Button\n        variant=\"outlined\"\n        startIcon={<AddIcon />}\n        onClick={handleNewChat}\n        fullWidth\n        sx={{\n          color: 'white',\n          borderColor: 'rgba(255, 255, 255, 0.2)',\n          '&:hover': {\n            borderColor: 'rgba(255, 255, 255, 0.3)',\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\n          },\n        }}\n      >\n        New Chat\n      </Button>\n    </Box>\n    <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n    <List sx={{ overflow: 'auto', height: 'calc(100vh - 80px)' }}>\n      {Object.entries(groupedConversations).map(([group, convs]) => (\n        convs.length > 0 && (\n          <React.Fragment key={group}>\n            <ListItem>\n              <ListItemText\n                primary={group.charAt(0).toUpperCase() + group.slice(1)}\n                sx={{\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  fontSize: '0.875rem',\n                }}\n              />\n            </ListItem>\n            {convs.map((conversation) => (\n              <ListItem\n                key={conversation.id}\n                disablePadding\n                sx={{\n                  backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent',\n                }}\n              >\n                <ListItemButton\n                  onClick={() => {\n                    handleConversationClick(conversation);\n                    if (window.innerWidth < 600) {\n                      handleDrawerToggle();\n                    }\n                  }}\n                  sx={{\n                    '&:hover': {\n                      backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                    },\n                  }}\n                >\n                  <ListItemText\n                    primary={conversation.title}\n                    sx={{\n                      color: 'white',\n                      '& .MuiTypography-root': {\n                        fontSize: '0.875rem',\n                      },\n                    }}\n                  />\n                  <MuiIconButton\n                    size=\"small\"\n                    onClick={(e) => handleMenuClick(e, conversation)}\n                    aria-label={`Options for ${conversation.title}`}\n                    aria-haspopup=\"true\"\n                    aria-expanded={Boolean(anchorEl) && selectedConversation?.id === conversation.id}\n                    sx={{ \n                      color: 'rgba(255, 255, 255, 0.5)',\n                      '&:focus': {\n                        outline: '2px solid rgba(255, 255, 255, 0.3)',\n                        outlineOffset: '2px',\n                      },\n                    }}\n                  >\n                    <MoreVertIcon />\n                  </MuiIconButton>\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </React.Fragment>\n        )\n      ))}\n    </List>\n  </>\n);\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}