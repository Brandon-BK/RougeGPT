{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemButton, Divider, IconButton as MuiIconButton, Menu, MenuItem, CircularProgress } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const drawerWidth = 260;\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n  const handleConversationClick = conversation => {\n    setCurrentConversation(conversation.id);\n  };\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n\n      // Update state\n      setConversations(updatedConversations);\n\n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n  const groupedConversations = groupConversationsByDate();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#202123',\n          borderRight: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewChat,\n          fullWidth: true,\n          sx: {\n            color: 'white',\n            borderColor: 'rgba(255, 255, 255, 0.2)',\n            '&:hover': {\n              borderColor: 'rgba(255, 255, 255, 0.3)',\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderColor: 'rgba(255, 255, 255, 0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          overflow: 'auto',\n          height: 'calc(100vh - 80px)'\n        },\n        children: Object.entries(groupedConversations).map(([group, convs]) => convs.length > 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: group.charAt(0).toUpperCase() + group.slice(1),\n              sx: {\n                color: 'rgba(255, 255, 255, 0.5)',\n                fontSize: '0.875rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), convs.map(conversation => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            sx: {\n              backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              onClick: () => handleConversationClick(conversation),\n              sx: {\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: conversation.title,\n                sx: {\n                  color: 'white',\n                  '& .MuiTypography-root': {\n                    fontSize: '0.875rem'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MuiIconButton, {\n                size: \"small\",\n                onClick: e => handleMenuClick(e, conversation),\n                \"aria-label\": `Options for ${conversation.title}`,\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": Boolean(anchorEl) && (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  '&:focus': {\n                    outline: '2px solid rgba(255, 255, 255, 0.3)',\n                    outlineOffset: '2px'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this)\n          }, conversation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this))]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"transparent\",\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: currentConversation ? (_conversations$find = conversations.find(c => c.id === currentConversation)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title : 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          py: 2,\n          height: 'calc(100vh - 64px)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            overflow: 'auto',\n            mb: 2,\n            px: 2\n          },\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '800px',\n                width: '100%',\n                backgroundColor: message.role === 'user' ? index % 2 === 0 ? 'rgba(16, 163, 127, 0.1)' // Light green for even messages\n                : 'rgba(16, 163, 127, 0.05)' // Lighter green for odd messages\n                : 'background.paper',\n                p: 2,\n                borderRadius: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-wrap',\n                  color: 'text.primary',\n                  fontSize: '1rem',\n                  lineHeight: 1.6\n                },\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '800px',\n                width: '100%',\n                backgroundColor: 'background.paper',\n                p: 2,\n                borderRadius: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20,\n                thickness: 4,\n                sx: {\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'text.primary',\n                  fontSize: '1rem',\n                  lineHeight: 1.6\n                },\n                children: \"Generating response...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            maxWidth: '800px',\n            width: '100%',\n            mx: 'auto',\n            px: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              display: 'flex',\n              alignItems: 'flex-end',\n              gap: 1,\n              backgroundColor: 'background.paper',\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              maxRows: 4,\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Send a message...\",\n              variant: \"outlined\",\n              disabled: isLoading,\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'background.default',\n                  '& fieldset': {\n                    borderColor: 'transparent'\n                  },\n                  '&:hover fieldset': {\n                    borderColor: 'primary.main'\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: 'primary.main'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSend,\n              disabled: isLoading || !input.trim(),\n              sx: {\n                alignSelf: 'flex-end',\n                '&:hover': {\n                  backgroundColor: 'rgba(16, 163, 127, 0.1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      onClick: handleMenuClose,\n      sx: {\n        '& .MuiPaper-root': {\n          backgroundColor: '#202123',\n          color: 'white'\n        }\n      },\n      MenuListProps: {\n        'aria-labelledby': 'conversation-menu-button'\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteClick,\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }, this), \" Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O4JTq0OCnLa1Q54AJ5Oysds6cZQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","TextField","IconButton","Typography","AppBar","Toolbar","Drawer","List","ListItem","ListItemText","ListItemButton","Divider","MuiIconButton","Menu","MenuItem","CircularProgress","SendIcon","AddIcon","MoreVertIcon","DeleteIcon","jsxDEV","_jsxDEV","App","_s","_conversations$find","messages","setMessages","input","setInput","isLoading","setIsLoading","conversations","setConversations","savedConversations","localStorage","getItem","JSON","parse","currentConversation","setCurrentConversation","savedCurrentConversation","anchorEl","setAnchorEl","selectedConversation","setSelectedConversation","messagesEndRef","drawerWidth","setItem","stringify","conversation","find","conv","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","role","content","updatedMessages","response","fetch","method","headers","body","message","ok","Error","data","json","assistantMessage","finalMessages","newConversation","Date","now","title","timestamp","prevConversations","map","error","console","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleNewChat","handleConversationClick","handleMenuClick","event","stopPropagation","currentTarget","handleMenuClose","handleDeleteClick","updatedConversations","filter","removeItem","groupConversationsByDate","today","setHours","yesterday","setDate","getDate","lastWeek","date","older","groupedConversations","sx","display","height","children","variant","width","flexShrink","boxSizing","backgroundColor","borderRight","p","Button","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fullWidth","color","borderColor","overflow","Object","entries","group","convs","length","Fragment","primary","charAt","toUpperCase","slice","fontSize","disablePadding","size","Boolean","outline","outlineOffset","flexGrow","flexDirection","position","elevation","component","c","maxWidth","py","mb","px","index","justifyContent","borderRadius","whiteSpace","lineHeight","alignItems","gap","thickness","ref","mx","multiline","maxRows","value","onChange","target","onKeyPress","placeholder","disabled","alignSelf","open","onClose","MenuListProps","mr","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Paper, \n  TextField, \n  IconButton, \n  Typography, \n  AppBar, \n  Toolbar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Divider,\n  IconButton as MuiIconButton,\n  Menu,\n  MenuItem,\n  CircularProgress\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const drawerWidth = 260;\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            conv.id === currentConversation \n              ? { ...conv, messages: finalMessages }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n\n  const handleConversationClick = (conversation) => {\n    setCurrentConversation(conversation.id);\n  };\n\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n      \n      // Update state\n      setConversations(updatedConversations);\n      \n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      \n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n\n  const groupedConversations = groupConversationsByDate();\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n            backgroundColor: '#202123',\n            borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n          },\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={handleNewChat}\n            fullWidth\n            sx={{\n              color: 'white',\n              borderColor: 'rgba(255, 255, 255, 0.2)',\n              '&:hover': {\n                borderColor: 'rgba(255, 255, 255, 0.3)',\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          >\n            New Chat\n          </Button>\n        </Box>\n        <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n        <List sx={{ overflow: 'auto', height: 'calc(100vh - 80px)' }}>\n          {Object.entries(groupedConversations).map(([group, convs]) => (\n            convs.length > 0 && (\n              <React.Fragment key={group}>\n                <ListItem>\n                  <ListItemText\n                    primary={group.charAt(0).toUpperCase() + group.slice(1)}\n                    sx={{\n                      color: 'rgba(255, 255, 255, 0.5)',\n                      fontSize: '0.875rem',\n                    }}\n                  />\n                </ListItem>\n                {convs.map((conversation) => (\n                  <ListItem\n                    key={conversation.id}\n                    disablePadding\n                    sx={{\n                      backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent',\n                    }}\n                  >\n                    <ListItemButton\n                      onClick={() => handleConversationClick(conversation)}\n                      sx={{\n                        '&:hover': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                        },\n                      }}\n                    >\n                      <ListItemText\n                        primary={conversation.title}\n                        sx={{\n                          color: 'white',\n                          '& .MuiTypography-root': {\n                            fontSize: '0.875rem',\n                          },\n                        }}\n                      />\n                      <MuiIconButton\n                        size=\"small\"\n                        onClick={(e) => handleMenuClick(e, conversation)}\n                        aria-label={`Options for ${conversation.title}`}\n                        aria-haspopup=\"true\"\n                        aria-expanded={Boolean(anchorEl) && selectedConversation?.id === conversation.id}\n                        sx={{ \n                          color: 'rgba(255, 255, 255, 0.5)',\n                          '&:focus': {\n                            outline: '2px solid rgba(255, 255, 255, 0.3)',\n                            outlineOffset: '2px',\n                          },\n                        }}\n                      >\n                        <MoreVertIcon />\n                      </MuiIconButton>\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          ))}\n        </List>\n      </Drawer>\n\n      <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {currentConversation ? conversations.find(c => c.id === currentConversation)?.title : 'New Chat'}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        \n        <Container \n          maxWidth=\"md\" \n          sx={{ \n            flexGrow: 1, \n            display: 'flex', \n            flexDirection: 'column',\n            py: 2,\n            height: 'calc(100vh - 64px)'\n          }}\n        >\n          <Box \n            sx={{ \n              flexGrow: 1, \n              overflow: 'auto', \n              mb: 2,\n              px: 2\n            }}\n          >\n            {messages.map((message, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: '800px',\n                    width: '100%',\n                    backgroundColor: message.role === 'user' \n                      ? index % 2 === 0 \n                        ? 'rgba(16, 163, 127, 0.1)'  // Light green for even messages\n                        : 'rgba(16, 163, 127, 0.05)' // Lighter green for odd messages\n                      : 'background.paper',\n                    p: 2,\n                    borderRadius: 2\n                  }}\n                >\n                  <Typography \n                    variant=\"body1\" \n                    sx={{ \n                      whiteSpace: 'pre-wrap',\n                      color: 'text.primary',\n                      fontSize: '1rem',\n                      lineHeight: 1.6\n                    }}\n                  >\n                    {message.content}\n                  </Typography>\n                </Box>\n              </Box>\n            ))}\n            {isLoading && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: '800px',\n                    width: '100%',\n                    backgroundColor: 'background.paper',\n                    p: 2,\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2\n                  }}\n                >\n                  <CircularProgress size={20} thickness={4} sx={{ color: 'primary.main' }} />\n                  <Typography \n                    variant=\"body1\" \n                    sx={{ \n                      color: 'text.primary',\n                      fontSize: '1rem',\n                      lineHeight: 1.6\n                    }}\n                  >\n                    Generating response...\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n            <div ref={messagesEndRef} />\n          </Box>\n          \n          <Box\n            sx={{\n              position: 'relative',\n              maxWidth: '800px',\n              width: '100%',\n              mx: 'auto',\n              px: 2\n            }}\n          >\n            <Paper\n              elevation={3}\n              sx={{\n                p: 2,\n                display: 'flex',\n                alignItems: 'flex-end',\n                gap: 1,\n                backgroundColor: 'background.paper',\n                borderRadius: 2,\n              }}\n            >\n              <TextField\n                fullWidth\n                multiline\n                maxRows={4}\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Send a message...\"\n                variant=\"outlined\"\n                disabled={isLoading}\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    backgroundColor: 'background.default',\n                    '& fieldset': {\n                      borderColor: 'transparent',\n                    },\n                    '&:hover fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                  },\n                }}\n              />\n              <IconButton\n                color=\"primary\"\n                onClick={handleSend}\n                disabled={isLoading || !input.trim()}\n                sx={{ \n                  alignSelf: 'flex-end',\n                  '&:hover': {\n                    backgroundColor: 'rgba(16, 163, 127, 0.1)',\n                  },\n                }}\n              >\n                <SendIcon />\n              </IconButton>\n            </Paper>\n          </Box>\n        </Container>\n      </Box>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        onClick={handleMenuClose}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: '#202123',\n            color: 'white',\n          },\n        }}\n        MenuListProps={{\n          'aria-labelledby': 'conversation-menu-button',\n        }}\n      >\n        <MenuItem onClick={handleDeleteClick}>\n          <DeleteIcon sx={{ mr: 1 }} /> Delete\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}