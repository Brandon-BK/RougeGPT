{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, TextField, IconButton, Typography, AppBar, Toolbar, Drawer, List, ListItem, ListItemText, ListItemButton, Button, Divider, IconButton as MuiIconButton, Menu, MenuItem, CircularProgress, Tooltip } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _conversations$find;\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const drawerWidth = 260;\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      const assistantMessage = {\n        role: 'assistant',\n        content: data.response\n      };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => prevConversations.map(conv => conv.id === currentConversation ? {\n          ...conv,\n          messages: finalMessages\n        } : conv));\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        role: 'assistant',\n        content: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n  const handleConversationClick = conversation => {\n    setCurrentConversation(conversation.id);\n  };\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n\n      // Update state\n      setConversations(updatedConversations);\n\n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n  const groupedConversations = groupConversationsByDate();\n  const handleCopyMessage = content => {\n    navigator.clipboard.writeText(content);\n  };\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n    setMessages(updatedMessages);\n\n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv => conv.id === currentConversation ? {\n        ...conv,\n        messages: updatedMessages\n      } : conv);\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        width: drawerWidth,\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: drawerWidth,\n          boxSizing: 'border-box',\n          backgroundColor: '#202123',\n          borderRight: '1px solid rgba(255, 255, 255, 0.1)'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 24\n          }, this),\n          onClick: handleNewChat,\n          fullWidth: true,\n          sx: {\n            color: 'white',\n            borderColor: 'rgba(255, 255, 255, 0.2)',\n            '&:hover': {\n              borderColor: 'rgba(255, 255, 255, 0.3)',\n              backgroundColor: 'rgba(255, 255, 255, 0.1)'\n            }\n          },\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderColor: 'rgba(255, 255, 255, 0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          overflow: 'auto',\n          height: 'calc(100vh - 80px)'\n        },\n        children: Object.entries(groupedConversations).map(([group, convs]) => convs.length > 0 && /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: group.charAt(0).toUpperCase() + group.slice(1),\n              sx: {\n                color: 'rgba(255, 255, 255, 0.5)',\n                fontSize: '0.875rem'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), convs.map(conversation => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            sx: {\n              backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent'\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              onClick: () => handleConversationClick(conversation),\n              sx: {\n                '&:hover': {\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)'\n                }\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: conversation.title,\n                sx: {\n                  color: 'white',\n                  '& .MuiTypography-root': {\n                    fontSize: '0.875rem'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MuiIconButton, {\n                size: \"small\",\n                onClick: e => handleMenuClick(e, conversation),\n                \"aria-label\": `Options for ${conversation.title}`,\n                \"aria-haspopup\": \"true\",\n                \"aria-expanded\": Boolean(anchorEl) && (selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === conversation.id,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.5)',\n                  '&:focus': {\n                    outline: '2px solid rgba(255, 255, 255, 0.3)',\n                    outlineOffset: '2px'\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this)\n          }, conversation.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 19\n          }, this))]\n        }, group, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"transparent\",\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: currentConversation ? (_conversations$find = conversations.find(c => c.id === currentConversation)) === null || _conversations$find === void 0 ? void 0 : _conversations$find.title : 'New Chat'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        sx: {\n          flexGrow: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          py: 2,\n          height: 'calc(100vh - 64px)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1,\n            overflow: 'auto',\n            mb: 2,\n            px: 2\n          },\n          children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '800px',\n                width: '100%',\n                backgroundColor: message.role === 'user' ? index % 2 === 0 ? 'rgba(16, 163, 127, 0.1)' // Light green for even messages\n                : 'rgba(16, 163, 127, 0.05)' // Lighter green for odd messages\n                : 'background.paper',\n                p: 2,\n                borderRadius: 2,\n                position: 'relative',\n                '&:hover .message-actions': {\n                  opacity: 1\n                }\n              },\n              children: editingMessage === index ? /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  gap: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  multiline: true,\n                  fullWidth: true,\n                  value: editedContent,\n                  onChange: e => setEditedContent(e.target.value),\n                  sx: {\n                    '& .MuiOutlinedInput-root': {\n                      backgroundColor: 'background.default'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    gap: 1,\n                    justifyContent: 'flex-end'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    onClick: handleCancelEdit,\n                    sx: {\n                      color: 'text.secondary'\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"small\",\n                    variant: \"contained\",\n                    onClick: handleSaveEdit,\n                    sx: {\n                      bgcolor: 'primary.main'\n                    },\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 415,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  sx: {\n                    whiteSpace: 'pre-wrap',\n                    color: 'text.primary',\n                    fontSize: '1rem',\n                    lineHeight: 1.6\n                  },\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  className: \"message-actions\",\n                  sx: {\n                    position: 'absolute',\n                    top: 8,\n                    right: 8,\n                    display: 'flex',\n                    gap: 1,\n                    opacity: 0,\n                    transition: 'opacity 0.2s',\n                    backgroundColor: 'background.paper',\n                    borderRadius: 1,\n                    p: 0.5\n                  },\n                  children: message.role === 'assistant' ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Copy\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleCopyMessage(message.content),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 468,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Edit\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      size: \"small\",\n                      onClick: () => handleEditMessage(message, index),\n                      sx: {\n                        color: 'text.secondary'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                        fontSize: \"small\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 478,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 473,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                maxWidth: '800px',\n                width: '100%',\n                backgroundColor: 'background.paper',\n                p: 2,\n                borderRadius: 2,\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 20,\n                thickness: 4,\n                sx: {\n                  color: 'primary.main'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'text.primary',\n                  fontSize: '1rem',\n                  lineHeight: 1.6\n                },\n                children: \"Generating response...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'relative',\n            maxWidth: '800px',\n            width: '100%',\n            mx: 'auto',\n            px: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 2,\n              display: 'flex',\n              alignItems: 'flex-end',\n              gap: 1,\n              backgroundColor: 'background.paper',\n              borderRadius: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              maxRows: 4,\n              value: input,\n              onChange: e => setInput(e.target.value),\n              onKeyPress: handleKeyPress,\n              placeholder: \"Send a message...\",\n              variant: \"outlined\",\n              disabled: isLoading,\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  backgroundColor: 'background.default',\n                  '& fieldset': {\n                    borderColor: 'transparent'\n                  },\n                  '&:hover fieldset': {\n                    borderColor: 'primary.main'\n                  },\n                  '&.Mui-focused fieldset': {\n                    borderColor: 'primary.main'\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"primary\",\n              onClick: handleSend,\n              disabled: isLoading || !input.trim(),\n              sx: {\n                alignSelf: 'flex-end',\n                '&:hover': {\n                  backgroundColor: 'rgba(16, 163, 127, 0.1)'\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleMenuClose,\n      onClick: handleMenuClose,\n      sx: {\n        '& .MuiPaper-root': {\n          backgroundColor: '#202123',\n          color: 'white'\n        }\n      },\n      MenuListProps: {\n        'aria-labelledby': 'conversation-menu-button'\n      },\n      children: /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleDeleteClick,\n        children: [/*#__PURE__*/_jsxDEV(DeleteIcon, {\n          sx: {\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 11\n        }, this), \" Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IMhX3gXi949CeX5O5QVftT0BhFU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","TextField","IconButton","Typography","AppBar","Toolbar","Drawer","List","ListItem","ListItemText","ListItemButton","Button","Divider","MuiIconButton","Menu","MenuItem","CircularProgress","Tooltip","SendIcon","AddIcon","MoreVertIcon","DeleteIcon","ContentCopyIcon","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","_conversations$find","messages","setMessages","input","setInput","isLoading","setIsLoading","conversations","setConversations","savedConversations","localStorage","getItem","JSON","parse","currentConversation","setCurrentConversation","savedCurrentConversation","anchorEl","setAnchorEl","selectedConversation","setSelectedConversation","messagesEndRef","drawerWidth","editingMessage","setEditingMessage","editedContent","setEditedContent","setItem","stringify","conversation","find","conv","id","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","trim","userMessage","role","content","updatedMessages","response","fetch","method","headers","body","message","ok","Error","data","json","assistantMessage","finalMessages","newConversation","Date","now","title","timestamp","prevConversations","map","error","console","prev","handleKeyPress","e","key","shiftKey","preventDefault","handleNewChat","handleConversationClick","handleMenuClick","event","stopPropagation","currentTarget","handleMenuClose","handleDeleteClick","updatedConversations","filter","removeItem","groupConversationsByDate","today","setHours","yesterday","setDate","getDate","lastWeek","date","older","groupedConversations","handleCopyMessage","navigator","clipboard","writeText","handleEditMessage","index","handleSaveEdit","handleCancelEdit","sx","display","height","children","variant","width","flexShrink","boxSizing","backgroundColor","borderRight","p","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fullWidth","color","borderColor","overflow","Object","entries","group","convs","length","primary","charAt","toUpperCase","slice","fontSize","disablePadding","size","Boolean","outline","outlineOffset","flexGrow","flexDirection","position","elevation","component","c","maxWidth","py","mb","px","justifyContent","borderRadius","opacity","gap","multiline","value","onChange","target","bgcolor","whiteSpace","lineHeight","className","top","right","transition","alignItems","thickness","ref","mx","maxRows","onKeyPress","placeholder","disabled","alignSelf","open","onClose","MenuListProps","mr","_c","$RefreshReg$"],"sources":["/Users/mac/Documents/personal projects/chatgpt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Paper, \n  TextField, \n  IconButton, \n  Typography, \n  AppBar, \n  Toolbar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemButton,\n  Button,\n  Divider,\n  IconButton as MuiIconButton,\n  Menu,\n  MenuItem,\n  CircularProgress,\n  Tooltip\n} from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport AddIcon from '@mui/icons-material/Add';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport EditIcon from '@mui/icons-material/Edit';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversations, setConversations] = useState(() => {\n    const savedConversations = localStorage.getItem('conversations');\n    return savedConversations ? JSON.parse(savedConversations) : [];\n  });\n  const [currentConversation, setCurrentConversation] = useState(() => {\n    const savedCurrentConversation = localStorage.getItem('currentConversation');\n    return savedCurrentConversation ? JSON.parse(savedCurrentConversation) : null;\n  });\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const messagesEndRef = useRef(null);\n  const drawerWidth = 260;\n  const [editingMessage, setEditingMessage] = useState(null);\n  const [editedContent, setEditedContent] = useState('');\n\n  // Save conversations to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('conversations', JSON.stringify(conversations));\n  }, [conversations]);\n\n  // Save current conversation to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('currentConversation', JSON.stringify(currentConversation));\n  }, [currentConversation]);\n\n  // Load messages when current conversation changes\n  useEffect(() => {\n    if (currentConversation) {\n      const conversation = conversations.find(conv => conv.id === currentConversation);\n      if (conversation) {\n        setMessages(conversation.messages);\n      }\n    } else {\n      setMessages([]);\n    }\n  }, [currentConversation, conversations]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim() || isLoading) return;\n\n    const userMessage = { role: 'user', content: input };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5001/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const data = await response.json();\n      const assistantMessage = { role: 'assistant', content: data.response };\n      const finalMessages = [...updatedMessages, assistantMessage];\n      setMessages(finalMessages);\n\n      // Create new conversation or update existing one\n      if (!currentConversation) {\n        const newConversation = {\n          id: Date.now(),\n          title: input,\n          messages: finalMessages,\n          timestamp: new Date()\n        };\n        setConversations(prevConversations => [newConversation, ...prevConversations]);\n        setCurrentConversation(newConversation.id);\n      } else {\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            conv.id === currentConversation \n              ? { ...conv, messages: finalMessages }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { \n        role: 'assistant', \n        content: 'Sorry, I encountered an error. Please try again.' \n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  };\n\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentConversation(null);\n    setInput('');\n    setIsLoading(false);\n  };\n\n  const handleConversationClick = (conversation) => {\n    setCurrentConversation(conversation.id);\n  };\n\n  const handleMenuClick = (event, conversation) => {\n    event.stopPropagation();\n    setAnchorEl(event.currentTarget);\n    setSelectedConversation(conversation);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    setSelectedConversation(null);\n  };\n\n  const handleDeleteClick = () => {\n    if (selectedConversation) {\n      const updatedConversations = conversations.filter(conv => conv.id !== selectedConversation.id);\n      \n      // Update state\n      setConversations(updatedConversations);\n      \n      // Update localStorage directly\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n      \n      if (currentConversation === selectedConversation.id) {\n        setMessages([]);\n        setCurrentConversation(null);\n        localStorage.removeItem('currentConversation');\n      }\n    }\n    handleMenuClose();\n  };\n\n  const groupConversationsByDate = () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n    \n    const lastWeek = new Date(today);\n    lastWeek.setDate(lastWeek.getDate() - 7);\n\n    return {\n      today: conversations.filter(conv => new Date(conv.timestamp) >= today),\n      yesterday: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= yesterday && date < today;\n      }),\n      lastWeek: conversations.filter(conv => {\n        const date = new Date(conv.timestamp);\n        return date >= lastWeek && date < yesterday;\n      }),\n      older: conversations.filter(conv => new Date(conv.timestamp) < lastWeek)\n    };\n  };\n\n  const groupedConversations = groupConversationsByDate();\n\n  const handleCopyMessage = (content) => {\n    navigator.clipboard.writeText(content);\n  };\n\n  const handleEditMessage = (message, index) => {\n    setEditingMessage(index);\n    setEditedContent(message.content);\n  };\n\n  const handleSaveEdit = async () => {\n    if (editingMessage === null || !editedContent.trim()) return;\n\n    const updatedMessages = [...messages];\n    updatedMessages[editingMessage] = {\n      ...updatedMessages[editingMessage],\n      content: editedContent\n    };\n\n    setMessages(updatedMessages);\n    \n    // Update the conversation in localStorage\n    if (currentConversation) {\n      const updatedConversations = conversations.map(conv =>\n        conv.id === currentConversation\n          ? { ...conv, messages: updatedMessages }\n          : conv\n      );\n      setConversations(updatedConversations);\n      localStorage.setItem('conversations', JSON.stringify(updatedConversations));\n    }\n\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n\n  const handleCancelEdit = () => {\n    setEditingMessage(null);\n    setEditedContent('');\n  };\n\n  return (\n    <Box sx={{ display: 'flex', height: '100vh' }}>\n      <Drawer\n        variant=\"permanent\"\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n            backgroundColor: '#202123',\n            borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n          },\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<AddIcon />}\n            onClick={handleNewChat}\n            fullWidth\n            sx={{\n              color: 'white',\n              borderColor: 'rgba(255, 255, 255, 0.2)',\n              '&:hover': {\n                borderColor: 'rgba(255, 255, 255, 0.3)',\n                backgroundColor: 'rgba(255, 255, 255, 0.1)',\n              },\n            }}\n          >\n            New Chat\n          </Button>\n        </Box>\n        <Divider sx={{ borderColor: 'rgba(255, 255, 255, 0.1)' }} />\n        <List sx={{ overflow: 'auto', height: 'calc(100vh - 80px)' }}>\n          {Object.entries(groupedConversations).map(([group, convs]) => (\n            convs.length > 0 && (\n              <React.Fragment key={group}>\n                <ListItem>\n                  <ListItemText\n                    primary={group.charAt(0).toUpperCase() + group.slice(1)}\n                    sx={{\n                      color: 'rgba(255, 255, 255, 0.5)',\n                      fontSize: '0.875rem',\n                    }}\n                  />\n                </ListItem>\n                {convs.map((conversation) => (\n                  <ListItem\n                    key={conversation.id}\n                    disablePadding\n                    sx={{\n                      backgroundColor: currentConversation === conversation.id ? 'rgba(255, 255, 255, 0.1)' : 'transparent',\n                    }}\n                  >\n                    <ListItemButton\n                      onClick={() => handleConversationClick(conversation)}\n                      sx={{\n                        '&:hover': {\n                          backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                        },\n                      }}\n                    >\n                      <ListItemText\n                        primary={conversation.title}\n                        sx={{\n                          color: 'white',\n                          '& .MuiTypography-root': {\n                            fontSize: '0.875rem',\n                          },\n                        }}\n                      />\n                      <MuiIconButton\n                        size=\"small\"\n                        onClick={(e) => handleMenuClick(e, conversation)}\n                        aria-label={`Options for ${conversation.title}`}\n                        aria-haspopup=\"true\"\n                        aria-expanded={Boolean(anchorEl) && selectedConversation?.id === conversation.id}\n                        sx={{ \n                          color: 'rgba(255, 255, 255, 0.5)',\n                          '&:focus': {\n                            outline: '2px solid rgba(255, 255, 255, 0.3)',\n                            outlineOffset: '2px',\n                          },\n                        }}\n                      >\n                        <MoreVertIcon />\n                      </MuiIconButton>\n                    </ListItemButton>\n                  </ListItem>\n                ))}\n              </React.Fragment>\n            )\n          ))}\n        </List>\n      </Drawer>\n\n      <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <AppBar position=\"static\" color=\"transparent\" elevation={0}>\n          <Toolbar>\n            <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n              {currentConversation ? conversations.find(c => c.id === currentConversation)?.title : 'New Chat'}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        \n        <Container \n          maxWidth=\"md\" \n          sx={{ \n            flexGrow: 1, \n            display: 'flex', \n            flexDirection: 'column',\n            py: 2,\n            height: 'calc(100vh - 64px)'\n          }}\n        >\n          <Box \n            sx={{ \n              flexGrow: 1, \n              overflow: 'auto', \n              mb: 2,\n              px: 2\n            }}\n          >\n            {messages.map((message, index) => (\n              <Box\n                key={index}\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: '800px',\n                    width: '100%',\n                    backgroundColor: message.role === 'user' \n                      ? index % 2 === 0 \n                        ? 'rgba(16, 163, 127, 0.1)'  // Light green for even messages\n                        : 'rgba(16, 163, 127, 0.05)' // Lighter green for odd messages\n                      : 'background.paper',\n                    p: 2,\n                    borderRadius: 2,\n                    position: 'relative',\n                    '&:hover .message-actions': {\n                      opacity: 1,\n                    },\n                  }}\n                >\n                  {editingMessage === index ? (\n                    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>\n                      <TextField\n                        multiline\n                        fullWidth\n                        value={editedContent}\n                        onChange={(e) => setEditedContent(e.target.value)}\n                        sx={{\n                          '& .MuiOutlinedInput-root': {\n                            backgroundColor: 'background.default',\n                          },\n                        }}\n                      />\n                      <Box sx={{ display: 'flex', gap: 1, justifyContent: 'flex-end' }}>\n                        <Button\n                          size=\"small\"\n                          onClick={handleCancelEdit}\n                          sx={{ color: 'text.secondary' }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          onClick={handleSaveEdit}\n                          sx={{ bgcolor: 'primary.main' }}\n                        >\n                          Save\n                        </Button>\n                      </Box>\n                    </Box>\n                  ) : (\n                    <>\n                      <Typography \n                        variant=\"body1\" \n                        sx={{ \n                          whiteSpace: 'pre-wrap',\n                          color: 'text.primary',\n                          fontSize: '1rem',\n                          lineHeight: 1.6\n                        }}\n                      >\n                        {message.content}\n                      </Typography>\n                      <Box\n                        className=\"message-actions\"\n                        sx={{\n                          position: 'absolute',\n                          top: 8,\n                          right: 8,\n                          display: 'flex',\n                          gap: 1,\n                          opacity: 0,\n                          transition: 'opacity 0.2s',\n                          backgroundColor: 'background.paper',\n                          borderRadius: 1,\n                          p: 0.5,\n                        }}\n                      >\n                        {message.role === 'assistant' ? (\n                          <Tooltip title=\"Copy\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleCopyMessage(message.content)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <ContentCopyIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        ) : (\n                          <Tooltip title=\"Edit\">\n                            <IconButton\n                              size=\"small\"\n                              onClick={() => handleEditMessage(message, index)}\n                              sx={{ color: 'text.secondary' }}\n                            >\n                              <EditIcon fontSize=\"small\" />\n                            </IconButton>\n                          </Tooltip>\n                        )}\n                      </Box>\n                    </>\n                  )}\n                </Box>\n              </Box>\n            ))}\n            {isLoading && (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center',\n                  mb: 2,\n                }}\n              >\n                <Box\n                  sx={{\n                    maxWidth: '800px',\n                    width: '100%',\n                    backgroundColor: 'background.paper',\n                    p: 2,\n                    borderRadius: 2,\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: 2\n                  }}\n                >\n                  <CircularProgress size={20} thickness={4} sx={{ color: 'primary.main' }} />\n                  <Typography \n                    variant=\"body1\" \n                    sx={{ \n                      color: 'text.primary',\n                      fontSize: '1rem',\n                      lineHeight: 1.6\n                    }}\n                  >\n                    Generating response...\n                  </Typography>\n                </Box>\n              </Box>\n            )}\n            <div ref={messagesEndRef} />\n          </Box>\n          \n          <Box\n            sx={{\n              position: 'relative',\n              maxWidth: '800px',\n              width: '100%',\n              mx: 'auto',\n              px: 2\n            }}\n          >\n            <Paper\n              elevation={3}\n              sx={{\n                p: 2,\n                display: 'flex',\n                alignItems: 'flex-end',\n                gap: 1,\n                backgroundColor: 'background.paper',\n                borderRadius: 2,\n              }}\n            >\n              <TextField\n                fullWidth\n                multiline\n                maxRows={4}\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onKeyPress={handleKeyPress}\n                placeholder=\"Send a message...\"\n                variant=\"outlined\"\n                disabled={isLoading}\n                sx={{\n                  '& .MuiOutlinedInput-root': {\n                    backgroundColor: 'background.default',\n                    '& fieldset': {\n                      borderColor: 'transparent',\n                    },\n                    '&:hover fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                    '&.Mui-focused fieldset': {\n                      borderColor: 'primary.main',\n                    },\n                  },\n                }}\n              />\n              <IconButton\n                color=\"primary\"\n                onClick={handleSend}\n                disabled={isLoading || !input.trim()}\n                sx={{ \n                  alignSelf: 'flex-end',\n                  '&:hover': {\n                    backgroundColor: 'rgba(16, 163, 127, 0.1)',\n                  },\n                }}\n              >\n                <SendIcon />\n              </IconButton>\n            </Paper>\n          </Box>\n        </Container>\n      </Box>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleMenuClose}\n        onClick={handleMenuClose}\n        sx={{\n          '& .MuiPaper-root': {\n            backgroundColor: '#202123',\n            color: 'white',\n          },\n        }}\n        MenuListProps={{\n          'aria-labelledby': 'conversation-menu-button',\n        }}\n      >\n        <MenuItem onClick={handleDeleteClick}>\n          <DeleteIcon sx={{ mr: 1 }} /> Delete\n        </MenuItem>\n      </Menu>\n    </Box>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}